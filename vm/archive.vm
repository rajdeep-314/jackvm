function iter_mul 3
    push argument 0
    pop local 0
    push argument 1
    pop local 1
    push constant 0
    pop local 2

    label START
    push local 1
    push constant 0
    eq
    if-goto END
    push local 0
    push local 2
    add
    pop local 2
    push local 1
    push constant 1
    sub
    pop local 1
    goto START

    label END
    push local 2
    return

function rec_mul 0
    push argument 0
    push constant 0
    eq
    if-goto base_case
    
    push argument 0
    push constant 1
    sub
    push argument 1
    call rec_mul 2
    push argument 1
    add
    return

    label base_case
    push constant 0
    return

function iter_fib 3
    push constant 0
    pop local 0
    push constant 1
    pop local 1
    push argument 0
    pop local 2

    label START
    push local 2
    push constant 0
    eq
    if-goto END
    push local 0
    push local 1
    add
    pop local 1
    push local 1
    push local 0
    sub
    pop local 0
    push local 2
    push constant 1
    sub
    pop local 2
    goto START

    label END
    push local 0
    return

function rec_fib 0
    push argument 0
    push constant 0
    eq
    if-goto ret0
    push argument 0
    push constant 1
    eq
    if-goto ret1
    push argument 0
    push constant 1
    sub
    call rec_fib 1
    push argument 0
    push constant 2
    sub
    call rec_fib 1
    add
    return

    label ret0
    push constant 0
    return

    label ret1
    push constant 1
    return

function midpoint 0
    push argument 0
    push constant 2
    lt
    if-goto base
    
    push argument 0
    push constant 2
    sub
    call midpoint 1
    push constant 1
    add
    return

    label base
    push constant 0
    return

function megamul 4
    push argument 0
    push argument 1
    pop local 1
    pop local 0
    push local 0
    call midpoint 1
    pop local 2
    push local 2
    push local 2
    add
    push local 0
    eq
    if-goto valid
    push local 2
    push constant 1
    add
    pop local 3
    goto endvalidation

    label valid
    push local 2
    pop local 3

    label endvalidation

    push local 1
    push local 2
    call iter_mul 2
    push local 1
    push local 3
    call rec_mul 2
    add
    return

function rec_fac 0
    push argument 0
    push constant 0
    eq
    if-goto base_case

    push argument 0
    push constant 1
    sub
    call rec_fac 1
    push argument 0
    call megamul 2
    return

    label base_case
    push constant 1
    return

function intdiv 0
    push argument 0
    push argument 1
    lt
    if-goto base_case

    push argument 0
    push argument 1
    sub
    push argument 1
    call intdiv 2
    push constant 1
    add
    return
    
    label base_case
    push constant 0
    return

function modulo 0
    push argument 0
    push argument 1
    lt
    if-goto base_case

    push argument 0
    push argument 1
    sub
    push argument 1
    call modulo 2
    return

    label base_case
    push argument 0
    return
